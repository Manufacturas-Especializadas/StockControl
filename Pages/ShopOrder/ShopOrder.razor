@page "/shoporder"

@using StockControl.Services;
@using StockControl.Models;

@inject ShopOrderServices services;
@inject IJSRuntime js;
@inject NavigationManager nav;

<PageTitle>ShopOrder</PageTitle>




<h1 class="text-black-bold text-center">ShopOrder</h1>





<div class="container">
    <div class="input-group mb-3">
        <input type="number" class="form-control-md p-1 rounded-2" placeholder="Ingresa la ShopOrder" @bind="shopOrder">
        <div class="input-group-append">
            <button class="btn btn-primary ms-2" type="button" @onclick="FindShopOrder">Buscar</button>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="table-responsive bg-white">
@*                 @if(showPlanner)
                { *@
                    <table class="table">
                        <thead>
                            <tr>
                                <th>ShopOrder</th>
                                <th>N.parte</th>
                                <th>Cantidad</th>
                                <th>Fecha</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in filteredPlanner)
                            {
                                <tr>
                                    <td>@item.ShopOrder</td>
                                    <td>@item.Codigo</td>
                                    <td>@item.Cantidad</td>
                                    <td>@item.Fecha.Value.ToShortDateString()</td>
                                </tr>   
                            }
                        </tbody>
                    </table>
                @* } *@
            </div>
        </div>

        <div class="col-sm-6">
            <div class="table-responsive bg-white">
@*                 @if(showPartNumer)
                { *@
                    <table class="table">
                        <thead>
                            <tr>
                                <th>N.parte</th>
                                <th>Fecha</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in filteredSalidas)
                            {
                                <tr>
                                    <td>@item.Codigo</td>
                                    <td>@item.FechaRegistro.ToShortDateString()</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                @* } *@
            </div>
        </div>
    </div>
</div>


@* <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title text-danger" id="exampleModalLabel">ADVERTENCIA</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="text-danger">La fecha no coincide con el numero de parte o no existe la ShopOrder</p>
            </div>
        </div>
    </div>
</div> *@


@code {
    int shopOrder;

    List<Planner> planners = new List<Planner>();
    List<Salida> salidas = new List<Salida>();

    List<Planner> filteredPlanner = new List<Planner>();
    List<Salida> filteredSalidas = new List<Salida>();

    bool showPlanner;
    bool showPartNumer;

    protected override void OnInitialized()
    {

        planners = services.GetPlans();
        salidas = services.GetSalidaList();

        filteredPlanner = new List<Planner>();
        filteredSalidas = new List<Salida>();

    }

    private void FindShopOrder()
    {

        var plannerResult = planners.Where(p => p.ShopOrder == shopOrder).ToList();
        if (plannerResult.Any())
        {
            var ShopOrderDate = plannerResult.First().Fecha.Value.Date;
            var salidResult = services.GetPartNumberByDate(ShopOrderDate);

            if (salidResult.Any())
            {

                filteredPlanner = plannerResult;
                filteredSalidas = salidResult;
                showPlanner = false;
                showPartNumer = false;

            }
            else
            {
                
                // ShowModal();
                FilterClean();

            }
        }
        else
        {

            // ShowModal();
            FilterClean();

        }

        StateHasChanged();
    }

    // private async Task ShowModal()
    // {
    //     await js.InvokeVoidAsync("$('#exampleModal').modal('show')");
    // }

    private void FilterClean()
    {
   
        filteredPlanner = new List<Planner>();
        filteredSalidas = new List<Salida>();
        showPlanner = true;
        showPartNumer = true;

    }
}
