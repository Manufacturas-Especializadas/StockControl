@page "/planner"

@using StockControl.Services;
@using StockControl.Models;

@inject PlannerServices services;
@inject NavigationManager nav;
@inject Microsoft.JSInterop.IJSRuntime JSRuntime;

<PageTitle>Planner</PageTitle>




<h1 class="text-black-bold text-center">PLANNER</h1>

<a href="/index" class="link-primary text-decoration-none pb-3 fw-bold">
    <i class="bi bi-arrow-left p-2">
        Volver atrás
    </i>
</a>

<div class="d-flex justify-content-end align-items-center">
    <button class="button-success-custom me-2 mt-2" @onclick="@(() => nav.NavigateTo("/planner/create"))">Registrar ShopOrder</button>
</div>

<div class="table-responsive">
    <table class="styled-table">
        <thead>
            <tr>
                <th>Shop Order</th>
                <th>Cantidad</th>
                <th>Fecha</th>
                <th>Opciones</th>
            </tr>
        </thead>
        @if (planners != null)
        {
            @foreach (var item in planners)
            {
                <tr>
                    <td>@item.ShopOrder</td>
                    <td>@item.Cantidad</td>
                    <td>@item.Fecha.Value.ToShortDateString()</td>
                    <td>
                        <button class="button-custom" @onclick="@(() => nav.NavigateTo($"/planneredit/{item.Id}"))">Editar</button>
                        <button class="button-custom-danger" @onclick="@(() => ShowPlannerDetails(item))">Detalles</button>
                    </td>
                </tr>
            }
        }
    </table>
</div>

<PaginationM CurrentPage="currentPage"
             TotalPages="totalPages"
             SelectedPage="@SelectedPageAsync" />

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Detalles del Planner</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            @if (selectedPlanner != null)
            {
                <p><strong>ShopOrder:</strong> @selectedPlanner.ShopOrder</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad2</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo2</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad3</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo3</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad4</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo4</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad5</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo5</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad6</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo6</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad7</p>
                <p><strong>Cantidad Total:</strong> @selectedPlanner.Cantidad</p>
                <p><strong>Fecha:</strong> @selectedPlanner.Fecha.Value.ToShortDateString()</p>
            }
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@CloseModal">Cerrar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>


@code {
    StockControl.Models.Planner selectedPlanner = null;

    List<Models.Planner> planners = new List<Models.Planner>();
    Models.Planner plannersEdit = new Models.Planner();

    int idToDelete;
    private int currentPage = 1;
    private int totalPages;
    private int PageSize;

    Modal modalRef;

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {

        await LoadData();

    }

    private async Task LoadData()
    {
        planners = await services.GetPagedPlanners(currentPage, 10);
        totalPages = await services.GetTotalPagesAsync(10);
    }


    private async Task SelectedPageAsync(int page)
    {
        currentPage = page;
        await LoadData();
    }



    private void ShowPlannerDetails(Models.Planner planner)
    {
        selectedPlanner = planner;
        modalRef.Show();
    }

    private Task CloseModal()
    {
        return modalRef.Hide();
    }

    private Task ShowModal()
    {
        return modalRef.Show();
    }
}