@page "/registro/create"


<PageTitle> Registro </PageTitle>

@using StockControl.Models;
@using StockControl.Services;

@inject RegisterServices services;
@inject NavigationManager nav;
@attribute [Authorize(policy: "AdminPolicy")]

<a href="/usuarios" class="link-primary text-decoration-none pb-3 fw-bold">
    <i class="bi bi-arrow-left p-2">
        Volver atrás
    </i>
</a>


<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card bg-white shadow-lg">
                <div class="card-body">
                    <EditForm Model="register" OnValidSubmit="(() => Create())">
                        <div class="form-group d-flex justify-content-center m-2">
                            <InputText class="input-text col-5" placeholder="Email" @bind-Value="register.Email" />
                            @* <ValidationMessage For="(() => register.Email)"/> *@
                        </div>

                        <div class="form-group d-flex justify-content-center m-2">
                            <InputText type="password" class="input-text col-5" placeholder="Contraseña" @bind-Value="register.Password" />
                            @* <ValidationMessage For="(() => register.Password)"/> *@
                        </div>

                        <div class="form-group d-flex justify-content-center m-2">
                            <select class="input-text col-5" @bind="selectedRoleId">
                                <option value="">--Seleccionar un rol--</option>
                                @foreach (var item in rols)
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }
                            </select>
                        </div>

                        <div class="text-center">
                            <button class="button-custom col-4" type="submit">Enviar</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    User register = new();

    int selectedRoleId;

    List<Rol> rols = new();

    protected override async Task OnInitializedAsync()
    {
        register = new User();

        if (register.Role != null)
        {
            selectedRoleId = register.Role.Id;
        }

        rols = await services.GetRol();
    }

    private async Task Create()
    {

        register.RoleId = selectedRoleId;

        var create = await services.CREATE(register);

        nav.NavigateTo("/usuarios", true);
    }
}