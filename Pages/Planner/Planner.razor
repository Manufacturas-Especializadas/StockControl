@page "/planner"

@using StockControl.Services;
@using StockControl.Models;

@inject PlannerServices services;
@inject NavigationManager nav;
@inject Microsoft.JSInterop.IJSRuntime JSRuntime;

<PageTitle>Planner</PageTitle>




<h1 class="text-black-bold text-center">PLANNER</h1>

<a href="/" class="link-primary text-decoration-none fw-bold"><i class="bi bi-arrow-left p-2"></i>Volver atrás</a>

<div class="d-flex justify-content-end align-items-center">
    <button class="button-success-custom m-2" @onclick="@(() => nav.NavigateTo("/planner/create"))">Registrar ShopOrder</button>
</div>

<RadzenDataGrid TItem="Models.Planner" Data="planners" AllowPaging="true" PageSize="10">
    <Columns>
        <RadzenDataGridColumn TItem="Models.Planner" Property="ShopOrder" Title="ShopOrder" TextAlign="TextAlign.Center"/>
        <RadzenDataGridColumn TItem="Models.Planner" Property="Cantidad" Title="Cantidad Total" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="Models.Planner" Property="Fecha" Title="Fecha" TextAlign="TextAlign.Center">
            <Template>
                <span>@context.Fecha.Value.ToShortDateString()</span>
            </Template>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Models.Planner" Property="Id" Title="Opciones" TextAlign="TextAlign.Center">
            <Template>
                <button class="button-custom" @onclick="@(() => nav.NavigateTo($"/planneredit/{context.Id}"))">Editar</button>
                <button class="button-custom-danger" @onclick="@(() => ShowPlannerDetails(context))">Detalles</button>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

<Modal @ref="modalRef">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Detalles del Planner</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            @if (selectedPlanner != null)
            {
                <p><strong>ShopOrder:</strong> @selectedPlanner.ShopOrder</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad2</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo2</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad3</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo3</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad4</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo4</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad5</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo5</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad6</p>
                <p><strong>N.Parte:</strong> @selectedPlanner.Codigo6</p>
                <p><strong>Cantidad:</strong> @selectedPlanner.Cantidad7</p>
                <p><strong>Cantidad Total:</strong> @selectedPlanner.Cantidad</p>
                <p><strong>Fecha:</strong> @selectedPlanner.Fecha.Value.ToShortDateString()</p>
            }
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@CloseModal">Cerrar</Button>
        </ModalFooter>
    </ModalContent>
</Modal>


@code {
    StockControl.Models.Planner selectedPlanner = null;

    List<Models.Planner> planners = new List<Models.Planner>();
    Models.Planner plannersEdit = new Models.Planner();

    int idToDelete;
    Modal modalRef;

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {

        planners = await services.GetPlanners();

    }

    // private void ShowPlannerDetails(int id)
    // {
    //     nav.NavigateTo($"/planner/details/{id}");
    // }

    private void ShowPlannerDetails(Models.Planner planner)
    {
        selectedPlanner = planner;
        modalRef.Show();
    }

    private Task CloseModal()
    {
        return modalRef.Hide();
    }

    private Task ShowModal()
    {
        return modalRef.Show();
    }
}